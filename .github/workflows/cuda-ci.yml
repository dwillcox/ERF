name: ERF CUDA CI

on:
  push:
    # branches: [development]
    paths-ignore:
      - Docs
      - README.rst
      - license.txt

  pull_request:
    branches: [development]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-cuda-ci
  cancel-in-progress: true

jobs:
  cuda-build:
    name: CUDA@11.2 GNU@9.3.0 C++17 Release [tests]
    runs-on: ubuntu-20.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual -Wextra-semi -Wunreachable-code"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_nvcc11.sh
    - name: Build & Install
      run: |
        export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
        export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
        which nvcc || echo "nvcc not in PATH!"

        cmake -B build \
            -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo \
            -DAMReX_GPU_BACKEND=CUDA                     \
            -DCMAKE_C_COMPILER=$(which gcc)              \
            -DCMAKE_CXX_COMPILER=$(which g++)            \
            -DCMAKE_CUDA_HOST_COMPILER=$(which g++)      \
            -DCMAKE_Fortran_COMPILER=$(which gfortran)   \
            -DCMAKE_CUDA_STANDARD=17                     \
            -DCMAKE_CXX_STANDARD=17                      \
#           -DAMReX_CUDA_ARCH=8.0                        \
            -DAMReX_CUDA_ERROR_CROSS_EXECUTION_SPACE_CALL=ON \
            -DAMReX_CUDA_ERROR_CAPTURE_THIS=ON \
            -DERF_DIM:STRING=3 \
            -DERF_ENABLE_MPI:BOOL=OFF \
            -DERF_ENABLE_CUDA:BOOL=ON .
        cmake --build build -j $(nproc)

